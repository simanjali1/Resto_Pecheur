import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import menuData from '../Data/menu.json';
import './MenuPage.css';

function MenuPage() {
  const [selectedCategory, setSelectedCategory] = useState(null);

  const categories = Object.keys(menuData.categories);

  // Images et ic√¥nes pour chaque cat√©gorie
  const categoryImages = {
    'entrees-froides': {
      icon: 'ü•ó',
      color: '#27ae60',
      description: 'Salades fra√Æches et entr√©es froides'
    },
    'entrees-chaudes': {
      icon: 'üç≤',
      color: '#e74c3c',
      description: 'Soupes et entr√©es chaudes'
    },
    'pates': {
      icon: 'üçù',
      color: '#f39c12',
      description: 'Spaghetti et tagliatelles'
    },
    'lasagnes': {
      icon: 'üßÄ',
      color: '#d35400',
      description: 'Lasagnes au four'
    },
    'omelettes': {
      icon: 'ü•ö',
      color: '#f1c40f',
      description: 'Omelettes vari√©es'
    },
    'sandwiches': {
      icon: 'ü•™',
      color: '#3498db',
      description: 'Sandwiches et wraps'
    },
    'paninis': {
      icon: 'üçû',
      color: '#95a5a6',
      description: 'Paninis grill√©s'
    },
    'burgers': {
      icon: 'üçî',
      color: '#e67e22',
      description: 'Burgers et steaks'
    },
    'poulet': {
      icon: 'üçó',
      color: '#f39c12',
      description: 'Poulet grill√© au four'
    },
    'plats': {
      icon: 'üçñ',
      color: '#c0392b',
      description: 'Brochettes et plats chauds'
    },
    'poisson-friture': {
      icon: 'üç§',
      color: '#3498db',
      description: 'Poissons frits et fruits de mer'
    },
    'plancha': {
      icon: 'üêü',
      color: '#16a085',
      description: 'Grillades √† la plancha'
    },
    'plat-creme': {
      icon: 'üê†',
      color: '#f8f9fa',
      description: 'Poissons √† la cr√®me'
    },
    'tajines': {
      icon: 'ü•ò',
      color: '#e74c3c',
      description: 'Tajines traditionnels'
    },
    'paella': {
      icon: 'ü•ô',
      color: '#f39c12',
      description: 'Pa√´llas valenciennes'
    },
    'desserts': {
      icon: 'üç∞',
      color: '#e91e63',
      description: 'Desserts et sucreries'
    },
    'boissons': {
      icon: '‚òï',
      color: '#795548',
      description: 'Th√©s, sodas et eau'
    },
    'jus': {
      icon: 'üßÉ',
      color: '#ff9800',
      description: 'Jus de fruits frais'
    },
    'jus-bio': {
      icon: 'ü•ï',
      color: '#4caf50',
      description: 'Jus bio et naturels'
    }
  };

  const handleCategoryClick = (categoryKey) => {
    setSelectedCategory(categoryKey);
  };

  const handleBackToCategories = () => {
    setSelectedCategory(null);
  };

  return (
    <div className="menu-page">
      {/* Header */}
      <header className="menu-header">
        <div className="container">
          <Link to="/" className="back-button">‚Üê Retour</Link>
          <h1>Menu Digital</h1>
          <h2>Resto P√™cheur - Tiznit</h2>
        </div>
      </header>

      <div className="menu-container">
        <div className="container">
          {!selectedCategory ? (
            // Vue des cat√©gories
            <div className="categories-view">
              <h2 className="page-title">D√©couvrez notre menu</h2>
              <p className="page-subtitle">Cliquez sur une cat√©gorie pour voir nos plats</p>
              
              <div className="categories-grid">
                {categories.map(categoryKey => {
                  const categoryInfo = categoryImages[categoryKey];
                  const category = menuData.categories[categoryKey];
                  
                  return (
                    <div
                      key={categoryKey}
                      className="category-card"
                      onClick={() => handleCategoryClick(categoryKey)}
                      style={{ borderColor: categoryInfo.color }}
                    >
                      <div 
                        className="category-icon"
                        style={{ backgroundColor: categoryInfo.color }}
                      >
                        {categoryInfo.icon}
                      </div>
                      <h3 className="category-title">{category.title}</h3>
                      <p className="category-description">{categoryInfo.description}</p>
                      <div className="category-count">
                        {category.items.length} plat{category.items.length > 1 ? 's' : ''}
                      </div>
                      <div className="category-price-range">
                        {Math.min(...category.items.map(item => item.price))} - {Math.max(...category.items.map(item => item.price))} DH
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          ) : (
            // Vue des plats d'une cat√©gorie
            <div className="category-details">
              <div className="category-header">
                <button className="back-btn" onClick={handleBackToCategories}>
                  ‚Üê Retour aux cat√©gories
                </button>
                <div className="category-info">
                  <span 
                    className="category-icon-large"
                    style={{ backgroundColor: categoryImages[selectedCategory].color }}
                  >
                    {categoryImages[selectedCategory].icon}
                  </span>
                  <div>
                    <h2>{menuData.categories[selectedCategory].title}</h2>
                    <p>{categoryImages[selectedCategory].description}</p>
                  </div>
                </div>
              </div>

              <div className="dishes-grid">
                {menuData.categories[selectedCategory].items.map((item, index) => (
                  <div key={index} className="dish-card">
                    <div className="dish-info">
                      <h3 className="dish-name">{item.name}</h3>
                      <div className="dish-price">{item.price} DH</div>
                    </div>
                    <div className="dish-actions">
                      <span className="dish-category">{menuData.categories[selectedCategory].title}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Call to action */}
          {!selectedCategory && (
            <div className="menu-cta">
              <h3>Envie de commander ?</h3>
              <p>R√©servez votre table pour d√©guster nos sp√©cialit√©s</p>
              <Link to="/reservation" className="cta-button">
                R√©server une table
              </Link>
            </div>
          )}
        </div>
      </div>

      {/* Footer */}
      <footer className="menu-footer">
        <div className="container">
          <p>üìû +212 528 86 25 47 | üìç M7RG+RJ3, Bd Mohamed Hafidi, Tiznit</p>
          <p>&copy; 2025 Resto P√™cheur - Tous les prix sont en Dirhams (DH)</p>
        </div>
      </footer>
    </div>
  );
}

export default MenuPage;